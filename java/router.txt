
1.登录密码加密
BCryptPasswordEncoder encoder = new BCryptPasswordEncoder();
String passEncoded = encoder.encode(pass);

2.图片一张上传多次



4.想查寻一条，结果n条

删除，商品添加

mysql-8.0.30-winx64
cd /D D:\mysql-8.0.30-winx64\bin

ALTER USER 'root'@'localhost' IDENTIFIED BY 'root123456';

8--类
10--类---欧克
11--枚举
12--异常处理
13--数组字符串
14--集合
15--泛型
16--坦克
17--线程--欧克
18--坦克
19--IO
20--坦克
21--net
23--JDBC
25--JDBC
27--正则表达式
28--棋盘

java -jar ./core-0.0.1-SNAPSHOT.jar
http://39.108.174.145:8062/sky/season/list
firewall-cmd --zone=public --add-port=8080/tcp --permanent

redis-benchmark -h 127.0.0.1 -p 6369 -c 100 -n 100000

<!DOCTYPE html>
<html>

<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width,initial-scale=1.0">
    <style>

    </style>
</head>

<body>
    <div id="app">-----你好呀-----</div>
</body>

<script>

</script>
</html>
jeecg-server-cloud\jeecg-visual\jeecg-cloud-xxljob\src\main\resources\application.yml

${MYSQL-PWD:root}
${MYSQL-PWD:root123456}

${MYSQL-HOST:jeecg-boot-mysql}
${MYSQL-HOST:localhost}


docker-compose.yml
container_name: jeecg-boot-mysql
container_name: localhost

MYSQL_ROOT_PASSWORD: root
MYSQL_ROOT_PASSWORD: root123456

C:\Users\USER\Desktop\sunsetFog\66666\jeecgboot-vue3\src\views\demo\jeecg\JUploadDemo.vue

demo/jeecg/JUploadDemo
\jeecgboot-vue3\src\components\jeecg\comment\useComment.ts
/jeecg/index

http://localhost:3100/comp/third/context-menu

C:\Users\USER\Desktop\sunsetFog\66666\jeecgboot-vue3\src\views\demo\jeecg\index.vue

java -jar ./news-system-1.0-SNAPSHOT.jar
java -jar ./MyBatisPlus-1.0-SNAPSHOT.jar

http://localhost:8080/jeecg-boot/sys/common/static/logs\20221126\userImportExcelErrorLog20221126015429105.txt
fileName: "userImportExcelErrorLog20221126015429105.txt"
fileUrl: "/sys/common/static/logs\\20221126\\userImportExcelErrorLog20221126015429105.txt"
msg: "总上传行数：4，已导入行数：0，错误行数：4"

file:/opt/upFiles
BirdsApplication

application.yaml


server:
  port: 7003


# eureka（读：尤里卡）服务器配置   启动后访问：http://localhost:7001/   自我保护机制：访问界面的红色警告是客户端掉线，每30秒监控到
#eureka:
##  实例化
#  instance:
##    实例名称 实现集群映射3个eureka-server，C:\Windows\System32\drivers\etc\Hosts
##    127.0.0.1   localhost
##    127.0.0.1   eureka7001.com
##    127.0.0.1   eureka7002.com
#    hostname: localhost
##    hostname: eureka7001.com
##    hostname: eureka7002.com
#  client:
##    表示是否注册自己到eureka注册中心
#    register-with-eureka: false
##    自己是否为注册中心
#    fetch-registry: false
##    监控页面
#    service-url:
##      集群，连接另外eureka-server写法：http://localhost:7003/eureka/, http://localhost:7004/eureka/
#      defaultZone: http://${eureka.instance.hostname}:${server.port}/eureka/